import React from 'react';
import Link from 'next/link';
import { Flex, Media, Spacer, Outset, Linkable, Emoji, clsx } from '@magiclabs/ui';
import { useRouter } from 'next/router';
import { darkThemeRoutes } from 'constants/dark-theme-routes';
import { footerLinks, INITIALIZE_CONTACT_OVERLAY } from 'constants/nav-links';
import { TypeformEmbeddedForm } from 'components/widgets/typeform-embedded-form';
// import { ProductHuntBadge } from 'components/widgets/product-hunt-badge';

import styles from './footer.module.less';

const footerMaxWidth = 1200;

export const Footer: React.FC<{ darkThemePages: string[] }> = ({ darkThemePages }) => {
  const router = useRouter();
  const pathname = router.asPath ? router.asPath : router.pathname;
  const isDarkRoute = darkThemePages.includes(pathname.replace(/[&\\#,+()$~%.'":*?<>{}].*$/g, ''));

  return (
    <Flex.Column horizontal="center" className={clsx([styles.Footer, isDarkRoute && styles.darkWrapper, 'footer'])}>
      <div className={styles.divider} />
      {/* Smartphone layout */}
      <Media lessThan="md" className="width100">
        <Spacer size={30} orientation="vertical" />

        <Flex.Row wrap style={{ maxWidth: footerMaxWidth, padding: '0 40px' }}>
          {footerLinks.map(({ categoryLabel, links }) => {
            return (
              <React.Fragment key={categoryLabel + links.map(cfg => cfg.label + cfg.href).join('')}>
                <LinkCategory categoryLabel={categoryLabel} links={links} />
                {/* {categoryChild && <Spacer size={10} orientation="vertical" />} */}
                {/* {categoryChild && ( */}
                {/*  <LinkCategory categoryLabel={categoryLabel} links={links} /> */}
                {/* )} */}
                {/* <div className={styles.divider} /> */}
              </React.Fragment>
            );
          })}

          <Flex.Column horizontal="center" className="w-100">
            <Spacer size={50} orientation="vertical" />
            <MagicLogoAndInfo centered />
          </Flex.Column>
        </Flex.Row>
      </Media>

      {/* Medium screen layout */}
      <Media between={['md', 'lg']} className="width100">
        <Spacer size={50} orientation="vertical" />

        <Flex.Row
          horizontal="space-around"
          shrink={1}
          style={{ maxWidth: footerMaxWidth, margin: '0 auto', padding: '0 60px' }}
        >
          <Outset left={5} right={5} trim="horizontal" wrapItemsWith="div">
            {footerLinks.map(({ categoryLabel, links, ...rest }) => {
              return (
                <LinkCategory
                  key={categoryLabel + links.map(cfg => cfg.label + cfg.href).join('')}
                  categoryLabel={categoryLabel}
                  links={links}
                  {...rest}
                />
              );
            })}
          </Outset>
        </Flex.Row>

        <Flex.Column horizontal="center">
          <Spacer size={65} orientation="vertical" />
          <MagicLogoAndInfo centered />
        </Flex.Column>
      </Media>

      {/* Big screen layout */}
      <Media greaterThanOrEqual="lg" className="width100">
        <Spacer size={50} orientation="vertical" />

        <Flex.Row
          horizontal="space-between"
          shrink={1}
          style={{ maxWidth: footerMaxWidth, margin: '0 auto', padding: '0 60px' }}
        >
          <Flex basis="35%">
            <MagicLogoAndInfo />
          </Flex>
          <Outset left={5} right={5} trim="horizontal" wrapItemsWith="div">
            {footerLinks.map(({ categoryLabel, links, ...rest }) => {
              return (
                <LinkCategory
                  key={categoryLabel + links.map(cfg => cfg.label + cfg.href).join('')}
                  categoryLabel={categoryLabel}
                  links={links}
                  {...rest}
                />
              );
            })}
          </Outset>
        </Flex.Row>
      </Media>

      <Spacer size={100} orientation="vertical" />
      <ManageCookieSettings />
    </Flex.Column>
  );
};

function LinkCategory(props) {
  const { categoryLabel, links, categoryChild, noPadding } = props;

  return (
    <>
      {/* Smartphone layout */}
      <Media lessThan="md" className="width100">
        <Flex.Column style={{ padding: '30px 0' }}>
          <Flex.Item grow={1}>
            <h4 className="mb-3 text-center" style={{ fontSize: '18px' }}>
              {categoryLabel}
            </h4>
          </Flex.Item>
          <Flex.Column grow={1} className="text-center">
            <Outset top={4} bottom={8} trim="vertical" wrapItemsWith="div">
              {links.map(linkProps => {
                return <FooterLink {...linkProps} key={linkProps.label + linkProps.href} />;
              })}
            </Outset>
          </Flex.Column>
        </Flex.Column>
      </Media>

      {/* Big screen layout */}
      <Media greaterThanOrEqual="md">
        <Flex.Column style={{ padding: (!noPadding && '0 30px') || 'unset' }}>
          <h4>{categoryLabel}</h4>
          <Spacer size={16} orientation="vertical" />
          <Outset top={4} bottom={8} trim="vertical" wrapItemsWith="div">
            {links.map(linkProps => {
              return <FooterLink {...linkProps} key={linkProps.label + linkProps.href} />;
            })}

            {/* Recurse the component when we have a category child */}
            {categoryChild && (
              <>
                <Spacer size={18} orientation="vertical" />
                <LinkCategory
                  key={categoryChild?.categoryLabel + categoryChild?.links.map(cfg => cfg.label + cfg.href).join('')}
                  categoryLabel={categoryChild?.categoryLabel}
                  links={categoryChild?.links}
                  noPadding
                />
              </>
            )}
          </Outset>
        </Flex.Column>
      </Media>
    </>
  );
}

const FooterLink: React.FC<{ label?: string; onPress?: () => void; href: string }> = props => {
  const { label, onPress, href } = props;
  const isBlank = href.includes('magic.link') ? undefined : '_blank';

  if (href === INITIALIZE_CONTACT_OVERLAY) {
    return (
      <TypeformEmbeddedForm className={styles.linkStyleOverride} wrapperType="a" href={href} onClick={onPress}>
        {label}
      </TypeformEmbeddedForm>
    );
  }

  return (
    <Linkable className={styles.linkStyleOverride}>
      {href.startsWith('/') ? (
        <Link href={href}>{label}</Link>
      ) : (
        <a onClick={onPress} href={href} target={isBlank} rel="noopener noreferrer">
          {label}
        </a>
      )}
    </Linkable>
  );
};

const MagicLogoAndInfo: React.FC<{ centered?: boolean }> = props => {
  const { centered } = props;

  return (
    <Flex.Column
      shrink={0}
      horizontal={centered ? 'center' : undefined}
      className={clsx([styles.logo, 'whiteSpaceNowrap ', centered && 'fontCentered'])}
    >
      {/* Magic logo image */}

      <div>
        <svg width="199" height="40" viewBox="0 0 199 40" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path
            fillRule="evenodd"
            clipRule="evenodd"
            d="M16.5931 -0.000489006C18.3235 2.11874 20.2319 4.08688 22.2955 5.8811C20.9193 10.3438 20.1785 15.0852 20.1785 19.9996C20.1785 24.9138 20.9193 29.6549 22.2953 34.1174C20.2317 35.9115 18.3234 37.8796 16.5931 39.9988C14.8611 37.8775 12.9507 35.9076 10.8848 34.112C12.2598 29.6511 13 24.9118 13 19.9997C13 15.0872 12.2597 10.3476 10.8846 5.88646C12.9506 4.09081 14.8611 2.12086 16.5931 -0.000489006ZM6.94119 31.0296C4.75509 29.4974 2.43498 28.1434 0.00193669 26.9887C0.676291 24.7777 1.03905 22.4309 1.03905 19.9993C1.03905 17.5676 0.676261 15.2206 0.00185719 13.0096C2.43485 11.8549 4.75493 10.5009 6.941 8.96881C7.77659 12.51 8.21873 16.2032 8.21873 19.9996C8.21873 23.7958 7.77666 27.4886 6.94119 31.0296ZM24.9675 19.9996C24.9675 23.7958 25.4096 27.4887 26.2451 31.0296C28.4303 29.498 30.7494 28.1445 33.1814 26.9901C32.5068 24.7787 32.1439 22.4314 32.1439 19.9993C32.1439 17.5671 32.5068 15.2197 33.1815 13.0082C30.7496 11.8538 28.4305 10.5003 26.2453 8.96881C25.4097 12.51 24.9675 16.2032 24.9675 19.9996Z"
            fill="#18171A"
          />
          <path
            fillRule="evenodd"
            clipRule="evenodd"
            d="M112.278 12.3069C113.84 12.3069 115.106 11.0407 115.106 9.47875C115.106 7.91682 113.84 6.65063 112.278 6.65063C110.716 6.65063 109.45 7.91682 109.45 9.47875C109.45 11.0407 110.716 12.3069 112.278 12.3069ZM44.403 9.12512H50.2355L56.3957 23.8321H56.6578L62.8181 9.12512H68.6506V31.0146H64.0632V16.7672H63.8775L58.0887 30.9078H54.9649L49.176 16.7138H48.9903V31.0146H44.403V9.12512ZM77.5141 31.3246C75.9121 31.3246 74.5832 30.9149 73.5274 30.0955C72.4716 29.276 71.9437 28.054 71.9437 26.4294C71.9437 25.2038 72.2386 24.2419 72.8284 23.5436C73.4182 22.8453 74.19 22.3358 75.1439 22.0151C76.1051 21.6874 77.1391 21.4736 78.2459 21.3738C79.7022 21.2313 80.7435 21.0817 81.3697 20.9249C81.9959 20.7682 82.309 20.4262 82.309 19.8989V19.8347C82.309 19.1578 82.0906 18.6341 81.6537 18.2636C81.224 17.893 80.6124 17.7078 79.8187 17.7078C78.9813 17.7078 78.3151 17.8859 77.8199 18.2422C77.3248 18.5985 76.9971 19.0509 76.8369 19.5996L72.5335 19.2576C72.8539 17.7612 73.6476 16.5748 74.9146 15.6984C76.1888 14.822 77.8308 14.3837 79.8405 14.3837C81.0857 14.3837 82.2508 14.5761 83.3357 14.9609C84.4207 15.3457 85.2944 15.9478 85.9571 16.7672C86.627 17.5795 86.9619 18.6377 86.9619 19.9416V31.0146H82.5493V28.738H82.4182C82.0105 29.5005 81.3988 30.124 80.5833 30.6085C79.775 31.0859 78.752 31.3246 77.5141 31.3246ZM78.8466 28.1823C79.866 28.1823 80.7034 27.8937 81.3588 27.3165C82.0141 26.7322 82.3418 26.009 82.3418 25.1468V23.4046C82.1597 23.5257 81.8757 23.6326 81.4898 23.7253C81.1112 23.8179 80.7034 23.8998 80.2665 23.9711C79.8369 24.0352 79.451 24.0922 79.1087 24.1421C78.2932 24.2561 77.6342 24.4806 77.1318 24.8155C76.6367 25.1504 76.3891 25.6385 76.3891 26.2798C76.3891 26.9068 76.6185 27.3806 77.0772 27.7013C77.5432 28.0219 78.133 28.1823 78.8466 28.1823ZM92.8109 36.1022C94.0997 36.9716 95.8728 37.4062 98.13 37.4062C99.732 37.4062 101.148 37.1711 102.379 36.7008C103.609 36.2305 104.574 35.5322 105.273 34.6059C105.98 33.6796 106.333 32.5359 106.333 31.175V14.5975H101.713V17.3551H101.538C101.334 16.9062 101.035 16.4537 100.642 15.9977C100.249 15.5416 99.7356 15.1604 99.1021 14.854C98.4686 14.5405 97.6822 14.3837 96.7429 14.3837C95.5196 14.3837 94.3909 14.6973 93.357 15.3243C92.3303 15.9442 91.5038 16.8741 90.8776 18.1139C90.2587 19.3538 89.9492 20.9071 89.9492 22.774C89.9492 24.591 90.2514 26.0909 90.8557 27.2738C91.4674 28.4566 92.2866 29.3366 93.3133 29.9138C94.3473 30.4909 95.4941 30.7795 96.7538 30.7795C98.0936 30.7795 99.1495 30.5052 99.9213 29.9565C100.693 29.4007 101.232 28.7844 101.538 28.1074H101.734V31.1108C101.734 32.1868 101.403 32.9599 100.74 33.4302C100.085 33.9005 99.2514 34.1356 98.2393 34.1356C97.2126 34.1356 96.4225 33.9503 95.8691 33.5798C95.323 33.2164 94.9553 32.8138 94.766 32.3721L90.4625 32.9385C90.7392 34.1784 91.522 35.2329 92.8109 36.1022ZM100.828 26.1408C100.216 26.9531 99.3497 27.3593 98.2283 27.3593C97.0851 27.3593 96.2113 26.946 95.607 26.1194C95.0026 25.2929 94.7004 24.1706 94.7004 22.7526C94.7004 21.356 94.999 20.216 95.5961 19.3324C96.2004 18.4488 97.0778 18.0071 98.2283 18.0071C99.357 18.0071 100.227 18.4381 100.839 19.3003C101.45 20.1625 101.756 21.3133 101.756 22.7526C101.756 24.1991 101.447 25.3285 100.828 26.1408ZM110.035 31.0146V14.5975H114.688V31.0146H110.035ZM121.561 30.2665C122.799 30.979 124.277 31.3353 125.996 31.3353C127.488 31.3353 128.781 31.0716 129.873 30.5444C130.965 30.01 131.821 29.2653 132.44 28.3105C133.066 27.3557 133.416 26.2512 133.488 24.9972H129.098C128.959 25.8736 128.617 26.5505 128.071 27.0279C127.525 27.4982 126.851 27.7334 126.05 27.7334C124.965 27.7334 124.095 27.3058 123.44 26.4508C122.792 25.5886 122.468 24.3737 122.468 22.8061C122.468 21.2527 122.795 20.0521 123.451 19.2041C124.106 18.3562 124.973 17.9322 126.05 17.9322C126.902 17.9322 127.59 18.1852 128.115 18.6911C128.646 19.1899 128.974 19.849 129.098 20.6684H133.488C133.423 19.4001 133.07 18.2956 132.429 17.3551C131.795 16.4145 130.925 15.6841 129.819 15.164C128.719 14.6438 127.437 14.3837 125.974 14.3837C124.277 14.3837 122.814 14.7436 121.583 15.4633C120.352 16.1758 119.402 17.1698 118.732 18.4453C118.07 19.7136 117.738 21.1886 117.738 22.8702C117.738 24.5304 118.066 25.9983 118.721 27.2738C119.384 28.5492 120.331 29.5468 121.561 30.2665Z"
            fill="#18171A"
          />
          <path
            d="M188.067 26.6677C188.086 27.218 188.214 27.6896 188.45 28.0827C188.686 28.4561 188.99 28.7607 189.364 28.9965C189.757 29.2127 190.189 29.3699 190.661 29.4682C191.152 29.5664 191.653 29.6156 192.164 29.6156C192.557 29.6156 192.97 29.5861 193.402 29.5271C193.835 29.4682 194.228 29.3601 194.582 29.2029C194.955 29.0457 195.26 28.8197 195.495 28.5249C195.731 28.2104 195.849 27.8174 195.849 27.3457C195.849 26.6972 195.603 26.2059 195.112 25.8718C194.621 25.5377 194.002 25.2724 193.255 25.0759C192.528 24.8597 191.732 24.673 190.867 24.5158C190.003 24.3389 189.197 24.1031 188.45 23.8083C187.723 23.4939 187.114 23.0616 186.622 22.5113C186.131 21.961 185.885 21.1946 185.885 20.212C185.885 19.4455 186.052 18.7872 186.387 18.2369C186.74 17.6867 187.182 17.2445 187.713 16.9104C188.263 16.5567 188.873 16.3012 189.541 16.144C190.229 15.9671 190.907 15.8787 191.575 15.8787C192.439 15.8787 193.235 15.9573 193.962 16.1145C194.69 16.2521 195.328 16.5075 195.879 16.8809C196.448 17.2347 196.9 17.726 197.235 18.3548C197.569 18.9641 197.765 19.7305 197.824 20.6542H195.318C195.279 20.1628 195.151 19.76 194.935 19.4455C194.719 19.1115 194.444 18.8461 194.11 18.6496C193.776 18.4531 193.402 18.3155 192.99 18.2369C192.597 18.1387 192.194 18.0895 191.781 18.0895C191.408 18.0895 191.024 18.119 190.631 18.178C190.258 18.2369 189.914 18.345 189.6 18.5022C189.285 18.6398 189.03 18.8363 188.833 19.0918C188.637 19.3276 188.538 19.6421 188.538 20.0351C188.538 20.4675 188.686 20.831 188.981 21.1258C189.295 21.4009 189.688 21.6368 190.16 21.8333C190.631 22.0102 191.162 22.1674 191.752 22.3049C192.341 22.4229 192.931 22.5506 193.52 22.6882C194.149 22.8257 194.758 22.9928 195.348 23.1893C195.957 23.3858 196.488 23.6511 196.94 23.9852C197.411 24.2996 197.785 24.7025 198.06 25.1938C198.355 25.6851 198.502 26.2943 198.502 27.0215C198.502 27.9451 198.306 28.7116 197.913 29.3208C197.539 29.93 197.038 30.4213 196.409 30.7947C195.8 31.1681 195.102 31.4236 194.316 31.5611C193.55 31.7184 192.783 31.797 192.017 31.797C191.172 31.797 190.366 31.7085 189.6 31.5317C188.833 31.3548 188.155 31.0698 187.566 30.6768C186.976 30.2641 186.504 29.7335 186.151 29.085C185.797 28.4168 185.6 27.611 185.561 26.6677H188.067Z"
            fill="#18171A"
          />
          <path
            d="M169.149 10.4248H171.655V18.2955H171.714C172.126 17.4505 172.775 16.8413 173.659 16.4679C174.544 16.0748 175.516 15.8783 176.578 15.8783C177.757 15.8783 178.779 16.0945 179.643 16.5268C180.528 16.9592 181.255 17.5487 181.825 18.2955C182.414 19.0227 182.856 19.8677 183.151 20.8307C183.446 21.7936 183.593 22.8155 183.593 23.8964C183.593 24.9773 183.446 25.9992 183.151 26.9622C182.876 27.9251 182.444 28.7702 181.854 29.4973C181.284 30.2048 180.557 30.7649 179.673 31.1776C178.808 31.5903 177.796 31.7966 176.637 31.7966C176.263 31.7966 175.841 31.7573 175.369 31.6787C174.917 31.6001 174.465 31.4723 174.013 31.2955C173.561 31.1186 173.129 30.8828 172.716 30.588C172.323 30.2736 171.989 29.8903 171.714 29.4383H171.655V31.4723H169.149V10.4248ZM180.94 23.7195C180.94 23.0121 180.842 22.3242 180.646 21.6561C180.469 20.9682 180.184 20.359 179.791 19.8284C179.417 19.2978 178.926 18.8753 178.317 18.5608C177.727 18.2464 177.03 18.0892 176.224 18.0892C175.379 18.0892 174.661 18.2562 174.072 18.5903C173.482 18.9244 173.001 19.3666 172.627 19.9168C172.254 20.4474 171.979 21.0567 171.802 21.7445C171.645 22.4323 171.566 23.13 171.566 23.8374C171.566 24.5842 171.655 25.3114 171.832 26.0188C172.008 26.7067 172.284 27.3159 172.657 27.8465C173.05 28.3771 173.551 28.8095 174.16 29.1435C174.77 29.458 175.507 29.6152 176.371 29.6152C177.236 29.6152 177.953 29.4482 178.523 29.1141C179.113 28.78 179.584 28.3378 179.938 27.7875C180.292 27.2373 180.547 26.6084 180.705 25.9009C180.862 25.1935 180.94 24.4663 180.94 23.7195Z"
            fill="#18171A"
          />
          <path
            d="M166.729 31.4137C166.297 31.6692 165.698 31.797 164.931 31.797C164.283 31.797 163.762 31.6201 163.369 31.2664C162.995 30.893 162.809 30.2936 162.809 29.4682C162.121 30.2936 161.315 30.893 160.392 31.2664C159.488 31.6201 158.505 31.797 157.444 31.797C156.756 31.797 156.098 31.7184 155.469 31.5611C154.859 31.4039 154.329 31.1583 153.877 30.8242C153.425 30.4901 153.061 30.0577 152.786 29.5271C152.531 28.9769 152.403 28.3185 152.403 27.5521C152.403 26.6874 152.55 25.9799 152.845 25.4296C153.14 24.8794 153.523 24.4372 153.995 24.1031C154.486 23.7494 155.036 23.4841 155.646 23.3072C156.274 23.1303 156.913 22.9829 157.562 22.865C158.249 22.7275 158.898 22.6292 159.507 22.5702C160.136 22.4916 160.686 22.3934 161.158 22.2755C161.63 22.1379 162.003 21.9512 162.278 21.7154C162.553 21.4599 162.691 21.0963 162.691 20.6247C162.691 20.0744 162.583 19.6322 162.367 19.2982C162.17 18.9641 161.905 18.7086 161.571 18.5317C161.256 18.3548 160.893 18.2369 160.48 18.178C160.087 18.119 159.694 18.0895 159.301 18.0895C158.24 18.0895 157.355 18.2959 156.648 18.7086C155.94 19.1016 155.557 19.8582 155.498 20.9784H152.993C153.032 20.0351 153.228 19.2392 153.582 18.5907C153.936 17.9421 154.407 17.4214 154.997 17.0283C155.587 16.6156 156.255 16.3208 157.002 16.144C157.768 15.9671 158.584 15.8787 159.448 15.8787C160.136 15.8787 160.814 15.9278 161.482 16.0261C162.17 16.1243 162.789 16.3307 163.339 16.6451C163.89 16.9399 164.332 17.3624 164.666 17.9127C165 18.4629 165.167 19.1802 165.167 20.0646V27.9058C165.167 28.4954 165.197 28.9277 165.255 29.2029C165.334 29.478 165.57 29.6156 165.963 29.6156C166.179 29.6156 166.435 29.5664 166.729 29.4682V31.4137ZM162.661 23.602C162.347 23.8378 161.934 24.0147 161.423 24.1326C160.912 24.2309 160.372 24.3193 159.802 24.3979C159.252 24.4569 158.692 24.5355 158.122 24.6337C157.552 24.7123 157.041 24.8499 156.589 25.0464C156.137 25.2429 155.763 25.5279 155.469 25.9013C155.194 26.255 155.056 26.7463 155.056 27.3752C155.056 27.7879 155.135 28.1417 155.292 28.4364C155.469 28.7116 155.685 28.9376 155.94 29.1144C156.215 29.2913 156.53 29.419 156.884 29.4977C157.237 29.5763 157.611 29.6156 158.004 29.6156C158.829 29.6156 159.537 29.5075 160.126 29.2913C160.716 29.0555 161.197 28.7705 161.571 28.4364C161.944 28.0827 162.219 27.7093 162.396 27.3163C162.573 26.9036 162.661 26.5203 162.661 26.1666V23.602Z"
            fill="#18171A"
          />
          <path d="M137.26 10.4248H140.061V29.1141H151.204V31.4723H137.26V10.4248Z" fill="#18171A" />
        </svg>
      </div>

      {/* Copyright notice */}
      <Spacer size={15} orientation="vertical" />
      <p>© {new Date().getFullYear()} Magic Labs, Inc.</p>

      {/* Address */}
      <Spacer size={15} orientation="vertical" />
      <p>548 Market St., PMB 31387</p>
      <Spacer size={5} orientation="vertical" />
      <p>San Francisco, California 94104-5401</p>
      <Spacer size={15} orientation="vertical" />
      <p>
        <a
          className={clsx(styles.recaptchaLink)}
          href="https://magic.link/legal/privacy-policy"
          target="_blank"
          rel="noopener noreferrer"
        >
          Privacy Policy
        </a>
        &nbsp;&nbsp;|&nbsp;&nbsp;
        <a
          className={clsx(styles.recaptchaLink)}
          href="https://magic.link/legal/terms-of-service"
          target="_blank"
          rel="noopener noreferrer"
        >
          Terms of Service
        </a>
      </p>

      {/* ProductHunt badge
      <Spacer size={30} orientation="vertical" />
      <ProductHuntBadge />
      */}
    </Flex.Column>
  );
};

const ManageCookieSettings: React.FC<{ centered?: boolean }> = props => {
  const { centered } = props;

  return (
    <Flex.Row horizontal={centered ? 'center' : undefined} style={{ width: '100%' }}>
      <button id="ot-sdk-btn" className={clsx(styles.ManageCookieSettings)} style={{ background: '#0d0d0d' }}>
        Manage Cookie Settings
      </button>
    </Flex.Row>
  );
};
